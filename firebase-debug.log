[debug] [2025-06-05T14:38:21.863Z] ----------------------------------------------------------------------
[debug] [2025-06-05T14:38:21.865Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Nevin\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2025-06-05T14:38:21.865Z] CLI Version:   14.6.0
[debug] [2025-06-05T14:38:21.865Z] Platform:      win32
[debug] [2025-06-05T14:38:21.865Z] Node Version:  v20.18.0
[debug] [2025-06-05T14:38:21.865Z] Time:          Thu Jun 05 2025 16:38:21 GMT+0200 (MitteleuropÃ¤ische Sommerzeit)
[debug] [2025-06-05T14:38:21.865Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-06-05T14:38:21.976Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-06-05T14:38:21.976Z] > authorizing via signed-in user (nevinhelfenstein@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\git\HSLU\HSLU.DSPRO2.Waitless

Before we get started, keep in mind:

  * You are currently outside your home directory
  * You are initializing within an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2025-06-05T14:38:30.659Z] Using project from CLI flag: waitless-aca8b
[debug] [2025-06-05T14:38:30.660Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:30.660Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:30.661Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/waitless-aca8b [none]
[debug] [2025-06-05T14:38:30.964Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/waitless-aca8b 200
[debug] [2025-06-05T14:38:30.964Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/waitless-aca8b {"projectId":"waitless-aca8b","projectNumber":"313422936197","displayName":"wAItless","name":"projects/waitless-aca8b","resources":{"hostingSite":"waitless-aca8b"},"state":"ACTIVE","etag":"1_567ca265-11c7-42fb-982d-18c459faf1dc"}
[info] i  Using project waitless-aca8b (wAItless) 
[info] 
=== Firestore Setup
[info] i  firestore: ensuring required API firestore.googleapis.com is enabled... 
[debug] [2025-06-05T14:38:30.969Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:30.969Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:30.969Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/firestore.googleapis.com [none]
[debug] [2025-06-05T14:38:30.969Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/firestore.googleapis.com x-goog-quota-user=projects/waitless-aca8b
[debug] [2025-06-05T14:38:31.905Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/firestore.googleapis.com 200
[debug] [2025-06-05T14:38:31.905Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/firestore.googleapis.com [omitted]
[info] +  firestore: required API firestore.googleapis.com is enabled 
[debug] [2025-06-05T14:38:31.906Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:31.906Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:31.906Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases [none]
[debug] [2025-06-05T14:38:32.353Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases 200
[debug] [2025-06-05T14:38:32.353Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases {"databases":[{"name":"projects/waitless-aca8b/databases/(default)","uid":"787793b3-51da-4d4e-832e-8d6ea8774868","createTime":"2025-06-05T12:47:37.543757Z","updateTime":"2025-06-05T12:47:37.543757Z","locationId":"europe-west6","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-06-05T13:38:33.708365Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"o","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"etag":"IN+2pYvB2o0DMNO1wt2o2o0D"}]}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2025-06-05T14:38:32.354Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:32.354Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:32.354Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/releases pageSize=10&pageToken=
[debug] [2025-06-05T14:38:33.123Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/releases 200
[debug] [2025-06-05T14:38:33.123Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/releases {"releases":[{"name":"projects/waitless-aca8b/releases/cloud.firestore","rulesetName":"projects/waitless-aca8b/rulesets/fcc0e1a4-cb45-4d98-815a-259ea180e79a","createTime":"2025-06-05T12:47:42.180051Z","updateTime":"2025-06-05T12:47:42.180051Z"}]}
[debug] [2025-06-05T14:38:33.123Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:33.123Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:33.124Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/rulesets/fcc0e1a4-cb45-4d98-815a-259ea180e79a [none]
[debug] [2025-06-05T14:38:33.803Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/rulesets/fcc0e1a4-cb45-4d98-815a-259ea180e79a 200
[debug] [2025-06-05T14:38:33.803Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/waitless-aca8b/rulesets/fcc0e1a4-cb45-4d98-815a-259ea180e79a [omitted]
[info] i  Downloaded the existing Firestore Security Rules from the Firebase console 
[info] i  Skipping write of firestore.rules 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2025-06-05T14:38:35.985Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:35.985Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:35.985Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:35.985Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:35.985Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/indexes [none]
[debug] [2025-06-05T14:38:35.985Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* [none]
[debug] [2025-06-05T14:38:36.042Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/indexes 200
[debug] [2025-06-05T14:38:36.042Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/indexes {}
[debug] [2025-06-05T14:38:36.046Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* 200
[debug] [2025-06-05T14:38:36.046Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/waitless-aca8b/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* {"fields":[{"name":"projects/waitless-aca8b/databases/(default)/collectionGroups/__default__/fields/*","indexConfig":{"indexes":[{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","order":"ASCENDING"}],"state":"READY"},{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","order":"DESCENDING"}],"state":"READY"},{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","arrayConfig":"CONTAINS"}],"state":"READY"}]}}]}
[info] i  Downloaded the existing Firestore indexes from the Firebase console 
[info] i  Skipping write of firestore.indexes.json 
[info] +  Wrote firestore.indexes.json 
[info] 
=== Functions Setup
[debug] [2025-06-05T14:38:38.275Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-06-05T14:38:38.275Z] > authorizing via signed-in user (nevinhelfenstein@gmail.com)
[debug] [2025-06-05T14:38:38.275Z] [iam] checking project waitless-aca8b for permissions ["firebase.projects.get"]
[debug] [2025-06-05T14:38:38.275Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.275Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.275Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/waitless-aca8b:testIamPermissions [none]
[debug] [2025-06-05T14:38:38.275Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/waitless-aca8b:testIamPermissions x-goog-quota-user=projects/waitless-aca8b
[debug] [2025-06-05T14:38:38.275Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/waitless-aca8b:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-06-05T14:38:38.986Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/waitless-aca8b:testIamPermissions 200
[debug] [2025-06-05T14:38:38.986Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/waitless-aca8b:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-06-05T14:38:38.986Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.986Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.986Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.986Z] Checked if tokens are valid: true, expires at: 1749137331555
[debug] [2025-06-05T14:38:38.986Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/cloudfunctions.googleapis.com [none]
[debug] [2025-06-05T14:38:38.986Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/waitless-aca8b
[debug] [2025-06-05T14:38:38.987Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/runtimeconfig.googleapis.com [none]
[debug] [2025-06-05T14:38:38.987Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/waitless-aca8b
[debug] [2025-06-05T14:38:39.823Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/runtimeconfig.googleapis.com 200
[debug] [2025-06-05T14:38:39.823Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/runtimeconfig.googleapis.com [omitted]
[debug] [2025-06-05T14:38:39.874Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/cloudfunctions.googleapis.com 200
[debug] [2025-06-05T14:38:39.874Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/waitless-aca8b/services/cloudfunctions.googleapis.com [omitted]
[info] Let's create a new codebase for your functions.
[info] A directory corresponding to the codebase will be created in your project
[info] with sample code pre-configured.

[info] See https://firebase.google.com/docs/functions/organize-functions for
[info] more information on organizing your functions using codebases.

[info] Functions can be deployed with firebase deploy.

[info] +  Wrote functions/requirements.txt 
[info] +  Wrote functions/.gitignore 
[info] +  Wrote functions/main.py 
[debug] [2025-06-05T14:38:48.254Z] Running command with virtualenv: command="C:\git\HSLU\HSLU.DSPRO2.Waitless\functions\venv\Scripts\activate.bat", args=["","&&","pip3","install","--upgrade","pip"]
[debug] [2025-06-05T14:38:49.101Z] Error: spawn "C:\git\HSLU\HSLU.DSPRO2.Waitless\functions\venv\Scripts\activate.bat" ENOENT
    at notFoundError (C:\Users\Nevin\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:6:26)
    at verifyENOENT (C:\Users\Nevin\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:40:16)
    at cp.emit (C:\Users\Nevin\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:27:25)
    at ChildProcess._handle.onexit (node:internal/child_process:294:12)
    at Process.callbackTrampoline (node:internal/async_hooks:130:17)
[error] 
[error] Error: An unexpected error has occurred.
